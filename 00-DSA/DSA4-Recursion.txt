

What is Recursion?
Recursion is a method where a function calls itself in order to solve a problem. 
The key idea is that a problem can often be broken down into smaller, simpler versions of the same problem.



function factorial(n) {
  // Base Case: Factorial of 0 is 1
  if (n === 0) {
    return 1;
  }
  // Recursive Case: n * factorial of n-1
  return n * factorial(n - 1);
}

console.log(factorial(5)); // Output: 120



// 1. Factorial of a Number
function factorial(n) {
  if (n === 0) return 1;
  return n * factorial(n - 1);
}
console.log("Factorial of 5:", factorial(5)); // Output: 120

// 2. Fibonacci Sequence
function fibonacci(n) {
  if (n <= 1) return n;
  return fibonacci(n - 1) + fibonacci(n - 2);
}
console.log("Fibonacci of 5:", fibonacci(5)); // Output: 5

// 3. Sum of Numbers from 1 to N
function sum(n) {
  if (n === 0) return 0;
  return n + sum(n - 1);
}
console.log("Sum of numbers from 1 to 5:", sum(5)); // Output: 15

// 4. Reverse a String
function reverse(str) {
  if (str === "") return str;
  return reverse(str.substring(1)) + str[0];
}
console.log("Reverse of 'hello':", reverse("hello")); // Output: "olleh"

// 5. Power of a Number (n^p)
function power(base, exp) {
  if (exp === 0) return 1;
  return base * power(base, exp - 1);
}
console.log("2^3:", power(2, 3)); // Output: 8

// 6. Check if a String is Palindrome
function isPalindrome(str) {
  if (str.length <= 1) return true;
  if (str[0] !== str[str.length - 1]) return false;
  return isPalindrome(str.substring(1, str.length - 1));
}
console.log("Is 'racecar' a palindrome?:", isPalindrome("racecar")); // Output: true

// 7. Find the Maximum Number in an Array
function findMax(arr, index = 0, max = -Infinity) {
  if (index === arr.length) return max;
  return findMax(arr, index + 1, Math.max(max, arr[index]));
}
console.log("Maximum number in [1, 2, 3, 9, 4]:", findMax([1, 2, 3, 9, 4])); // Output: 9

// 8. Print Numbers from N to 1
function printNumbers(n) {
  if (n === 0) return;
  console.log(n);
  printNumbers(n - 1);
}
console.log("Print numbers from 5 to 1:");
printNumbers(5); // Output: 5 4 3 2 1

// 9. Decimal to Binary Conversion
function decimalToBinary(n) {
  if (n === 0) return "";
  return decimalToBinary(Math.floor(n / 2)) + (n % 2);
}
console.log("Decimal 5 in binary:", decimalToBinary(5)); // Output: "101"

// 10. Count Down from N
function countDown(n) {
  if (n < 0) return;
  console.log(n);
  countDown(n - 1);
}
console.log("Count down from 3:");
countDown(3); // Output: 3 2 1 0

 