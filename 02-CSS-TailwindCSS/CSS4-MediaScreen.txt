// 1 - @media rule
// 2 - screen orientation
// 3 - print , page 
// 4 - @supports 
// 5 - prefers-color-scheme
// 6 - display mode 
// 7 - break point 











// 1 - @media rule

@media media-type and (media-feature) {
    /* CSS rules */
}


@media screen {
    body {
        background-color: lightblue;
    }
}


@media screen and (max-width: 768px) {
    body {
        background-color: lightgreen;
    }
    .container {
        width: 100%;
    }
}



@media screen and (min-width: 768px) and (max-width: 1024px) {
    body {
        background-color: lightcoral;
    }
}










// 2 screen orientation

@media screen and (orientation: portrait) {
    body {
        background-color: lightyellow;
    }
}

@media screen and (orientation: landscape) {
    body {
        background-color: lightpink;
    }
}











// 3 - print , page 

@media print {
    body {
        font-size: 12pt;
    }
    .no-print {
        display: none;
    }
}




@media screen and (min-resolution: 192dpi) {
    img {
        width: 100%;
        height: auto;
    }
}


// 26 - print media  @page 


@media print {
  /* Styles for printing */
}


@media print {
  body {
    font-size: 12pt;
    line-height: 1.5;
    color: black;
    background-color: white;
  }

  /* Hide navigation links on print */
  nav, .no-print {
    display: none;
  }

  /* Ensure images are not too large */
  img {
    max-width: 100%;
    height: auto;
  }
}




@media print {
  /* Add a page break before certain elements */
  h1 {
    page-break-before: always;
  }

  /* Prevent page breaks inside specific elements */
  .no-break {
    page-break-inside: avoid;
  }

  /* Control page breaks after elements */
  p {
    page-break-after: auto;
  }
}


// @page 

@page {
  /* Styles for the printed page */
}



@page {
  margin: 1in;  /* Sets a 1-inch margin on all sides */
}


@page {
  size: A4 landscape;  /* Set the page size to A4 and the orientation to landscape */
}


@media print {
  .no-break {
    break-before: avoid; /* Prevent a page break before this element */
    break-after: avoid;  /* Prevent a page break after this element */
  }
}


.container {
  column-count: 3; /* Create a 3-column layout */
  column-gap: 1rem;
}

h2 {
  break-before: always; /* Force a column break before each <h2> */
}

p {
  break-after: always; /* Force a column break after each <p> */
}


.container {
  column-count: 3;  /* Create a 3-column layout */
  column-gap: 1rem;
}

.item {
  break-inside: avoid-column; /* Prevent the item from being split across columns */
}










// 4 - @supports 

@supports (property: value) {
  /* Styles to apply if the property is supported */
}

@supports not (property: value) {
  /* Styles to apply if the property is not supported */
}




@supports (display: grid) {
  .container {
    display: grid; /* If the browser supports CSS Grid, apply this */
    grid-template-columns: repeat(3, 1fr);
  }
}

@supports not (display: grid) {
  .container {
    display: flex; /* If the browser does not support CSS Grid, use Flexbox instead */
    justify-content: space-between;
  }
}




@supports (--css: variables) {
  :root {
    --primary-color: blue;
  }
  .button {
    background-color: var(--primary-color);
  }
}




@supports (display: grid) and (width: 100%) {
  /* Apply styles if both conditions are supported */
}



@supports (display: grid) {
  .grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
  }
}

@supports (display: flex) {
  .grid-container {
    display: flex;
    justify-content: space-between;
  }
}










// 5 - prefers-color-scheme

@media (prefers-color-scheme: light) {
  /* Styles for light mode */
}

@media (prefers-color-scheme: dark) {
  /* Styles for dark mode */
}


/* Default styles (for light mode) */
body {
  background-color: white;
  color: black;
}

/* Dark mode styles */
@media (prefers-color-scheme: dark) {
  body {
    background-color: #121212;
    color: white;
  }

  a {
    color: #BB86FC;
  }
}



/* Light Mode */
@media (prefers-color-scheme: light) {
  body {
    background-color: #f0f0f0;
    color: #333;
  }
  button {
    background-color: #007BFF;
    color: white;
  }
}

/* Dark Mode */
@media (prefers-color-scheme: dark) {
  body {
    background-color: #181818;
    color: #e0e0e0;
  }
  button {
    background-color: #6200EE;
    color: white;
  }
}



:root {
  --background-color-light: #ffffff;
  --background-color-dark: #121212;
  --text-color-light: #000000;
  --text-color-dark: #ffffff;
}

body {
  background-color: var(--background-color-light);
  color: var(--text-color-light);
}

/* Dark mode */
@media (prefers-color-scheme: dark) {
  body {
    background-color: var(--background-color-dark);
    color: var(--text-color-dark);
  }
}




if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
  console.log('User prefers dark mode');
} else {
  console.log('User prefers light mode');
}










// 6 - display mode 

@media (display-mode: <mode>) {
  /* Styles to apply when the app is in the specified display mode */
}


@media (display-mode: fullscreen) {
  header, footer {
    display: none; /* Hide header and footer in full-screen mode */
  }
}


@media (display-mode: standalone) {
  body {
    background-color: #f4f4f4;
    font-family: 'Arial', sans-serif;
  }

  .nav-bar {
    display: none; /* Hide the nav bar in standalone mode */
  }
}



@media (display-mode: minimal-ui) {
  .header {
    font-size: 14px;
  }

  .footer {
    padding: 5px;
  }
}



// fullscreen 

/* Default styles */
div {
  width: 50%;
  height: 50%;
  background-color: lightblue;
  transition: all 0.3s ease;
}

/* Styles when the div is in full-screen mode */
div:fullscreen {
  width: 100%;
  height: 100%;
  background-color: #3498db;
}


// orientation


@media (orientation: portrait) {
  /* Styles for portrait mode */
}

@media (orientation: landscape) {
  /* Styles for landscape mode */
}



/* Default image size */
img {
  width: 100%;
  height: auto;
}

/* Styles for landscape orientation */
@media (orientation: landscape) {
  img {
    width: 80%;  /* In landscape, make the image smaller */
  }
}

/* Styles for portrait orientation */
@media (orientation: portrait) {
  img {
    width: 100%;  /* In portrait, use full width */
  }
}
















// 7 - break point 

/* Default styles (for mobile-first approach) */
body {
  font-size: 14px;
  background-color: lightblue;
}

/* Mobile devices (up to 767px) */
@media (max-width: 767px) {
  body {
    background-color: lightcoral;
    font-size: 14px;
  }
  .device-type::after {
    content: "Mobile";
  }
}

/* Tablets (768px to 1023px) */
@media (min-width: 768px) and (max-width: 1023px) {
  body {
    background-color: lightgreen;
    font-size: 16px;
  }
  .device-type::after {
    content: "Tablet";
  }
}

/* Desktops (1024px and above) */
@media (min-width: 1024px) {
  body {
    background-color: lightgoldenrodyellow;
    font-size: 18px;
  }
  .device-type::after {
    content: "Desktop";
  }
}

/* Optional: Extra Large Desktops (1200px and above) */
@media (min-width: 1200px) {
  body {
    background-color: lavender;
    font-size: 20px;
  }
  .device-type::after {
    content: "Large Desktop";
  }
}

/* Helper class to display the current device type */
.device-type::before {
  content: "Current Device: ";
  font-weight: bold;
}