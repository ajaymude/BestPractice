//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////

/*
========================================
JENKINS – INTRODUCTION (Beginner)
========================================

1. What is Jenkins?
- Open-source automation server for building, testing, and deploying software.
- Core use in DevOps: Implementing CI/CD pipelines.
- Supports 1800+ plugins to integrate with various tools.
- Example: Automatically build, test, and deploy code after every Git push.

----------------------------------------

2. History & Evolution
- Hudson → Created by Kohsuke Kawaguchi at Sun Microsystems (2004–2005).
- Oracle acquired Sun Microsystems and owned Hudson trademark.
- In 2011, community forked Hudson → Jenkins (more popular today).
- Maintained by the open-source Jenkins community.

----------------------------------------

3. Why Jenkins in DevOps?
- Automates repetitive tasks (builds, tests, deployments).
- Integrates with most developer tools (Git, Docker, Kubernetes, AWS, etc.).
- Provides faster feedback loops.
- Supports "Pipeline as Code" for defining CI/CD in a Jenkinsfile.

----------------------------------------

4. Key Features & Benefits
- Free & open-source.
- Plugin ecosystem (1800+ plugins).
- Cross-platform (Windows, Linux, macOS).
- Easy setup (WAR file, Docker, OS packages).
- Distributed builds for speed and scalability.
- Pipeline as Code for automation.

----------------------------------------

5. CI vs CD
| Feature | Continuous Integration (CI) | Continuous Deployment (CD) |
|---------|-----------------------------|-----------------------------|
| Goal    | Merge code often, run tests. | Deploy to production after tests pass. |
| Focus   | Find integration bugs early. | Deliver changes quickly. |
| Example | Build + Unit Tests on commit. | Auto deploy after successful tests. |

----------------------------------------

6. Jenkins Architecture
- Master (Controller):
    - Schedules jobs.
    - Manages plugins & UI.
    - Assigns tasks to agents.
- Agent (Node):
    - Executes build jobs.
    - Can run on different machines to distribute workload.

----------------------------------------

7. Master/Agent Setup
- Standalone: Master runs jobs itself (small teams/projects).
- Distributed: Master delegates jobs to remote agents (large teams, resource-heavy builds).

----------------------------------------

8. Standalone vs Distributed Builds
- Standalone:
    - Simple, quick to set up.
    - Limited scalability.
- Distributed:
    - Parallel builds, multiple environments.
    - Better performance for big projects.
*/


//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////