

/ text write 

<Text style={styles.text}>HomeScreen hello for the test</Text> ; 



Basic Components


Text: A component for displaying text.

View: A container that supports layout with flexbox, style, some touch handling, and accessibility controls.

Image: A component for displaying images.

ScrollView: A scrolling container that can host multiple components and views.

TextInput: A component for inputting text into the app via a keyboard.

Button: A basic button component for handling touch events.






List Components


FlatList: A component for rendering performant lists.

SectionList: A component for rendering sectioned lists.






User Interface


ActivityIndicator: A component for displaying a circular loading indicator.

Switch: A component for rendering a boolean input (toggle switch).

Slider: A component for selecting a single value from a range of values (deprecated, use @react-native-community/slider instead).

Picker: A component for selecting an item from a dropdown list (deprecated, use @react-native-community/picker instead).

Modal: A component for presenting content above an enclosing view.

RefreshControl: A component used inside a ScrollView or ListView to add pull-to-refresh functionality.

StatusBar: A component to control the app's status bar.







Platform-Specific


DatePickerIOS: A component for selecting a date (iOS only).

DrawerLayoutAndroid: A component for rendering a drawer layout (Android only).

ProgressBarAndroid: A component for displaying a progress bar (Android only).

ProgressViewIOS: A component for displaying a progress bar (iOS only).

SegmentedControlIOS: A component for rendering a segmented control (iOS only).

SnapshotViewIOS: A component for taking snapshots of views (iOS only).






Others


TouchableOpacity: A wrapper for making views respond properly to touches.

TouchableHighlight: A wrapper for making views respond properly to touches with a background highlight.

TouchableWithoutFeedback: A wrapper for making views respond properly to touches without any visual feedback.

TouchableNativeFeedback: A wrapper for making views respond properly to touches (Android only).

KeyboardAvoidingView: A component for automatically adjusting the view to avoid the keyboard.

SafeAreaView: A component for rendering content within the safe area boundaries of a device.

Animated: A library for creating animations.

WebView: A component for displaying web content (deprecated, use react-native-webview instead).

VirtualizedList: A component for rendering large lists efficiently.








Deprecated Components


ListView: A component for rendering lists (deprecated, use FlatList or SectionList instead).

ToolbarAndroid: A component for rendering a toolbar (Android only, deprecated).







Third-Party Libraries


React Native also has a rich ecosystem of third-party libraries that provide additional components, such as:

React Navigation: For navigation.

React Native Elements: A UI toolkit with pre-built components.

React Native Paper: A material design component library.

React Native Vector Icons: A library for using icons in your app.













// FlatList ,

we can set horizontal also , horizontal scroll indicator  also we can set 


import React from 'react';
import { FlatList, View, Text, StyleSheet } from 'react-native';

const data = [
  { id: '1', name: 'John Doe' },
  { id: '2', name: 'Jane Smith' },
  { id: '3', name: 'Alice Johnson' },
  { id: '4', name: 'Bob Brown' },
  { id: '5', name: 'Charlie Davis' },
  { id: '6', name: 'Eva Green' },
  { id: '7', name: 'Frank White' },
  { id: '8', name: 'Grace Black' },
  { id: '9', name: 'Henry Wilson' },
  { id: '10', name: 'Ivy Lee' },
];

const App = () => {
  const renderItem = ({ item }) => (
    <View style={styles.item}>
      <Text style={styles.text}>{item.name}</Text>
    </View>
  );

  return (
    <FlatList
      data={data}
      renderItem={renderItem}
      keyExtractor={(item) => item.id}
    />
  );
};

const styles = StyleSheet.create({
  item: {
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
  },
  text: {
    fontSize: 18,
  },
});

export default App;