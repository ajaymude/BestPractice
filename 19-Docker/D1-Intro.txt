// Images 

// Container 









# Basic Information
docker --version                   # Show Docker version
docker info                        # Show system-wide information

# Images
docker images                      # List all images
docker pull <image>                 # Pull an image from Docker Hub
docker build -t <image-name> <path> # Build an image from Dockerfile
docker rmi <image-id>               # Remove an image

# Containers
docker ps                          # List running containers
docker ps -a                       # List all containers (running and stopped)
docker run <options> <image>        # Run a container from an image
docker exec -it <container-id> <cmd># Execute a command in a running container
docker stop <container-id>         # Stop a running container
docker start <container-id>        # Start a stopped container
docker restart <container-id>      # Restart a container
docker rm <container-id>           # Remove a stopped container
docker logs <container-id>         # View container logs

# Volumes
docker volume ls                   # List all volumes
docker volume create <name>         # Create a volume
docker volume rm <name>             # Remove a volume

# Networks
docker network ls                  # List all networks
docker network create <name>        # Create a network
docker network rm <name>            # Remove a network

# Docker Compose
docker-compose up                  # Start services defined in docker-compose.yml
docker-compose down                # Stop and remove services
docker-compose build               # Build or rebuild services
docker-compose logs                # View logs of services

# System Cleanup
docker system prune                # Remove unused data (images, containers, volumes)
docker image prune                 # Remove unused images
docker container prune             # Remove stopped containers
docker volume prune                # Remove unused volumes

# Docker Hub
docker login                       # Log in to Docker Hub
docker logout                      # Log out of Docker Hub
docker tag <image> <tag>            # Tag an image
docker push <image>                 # Push an image to Docker Hub

# Docker Network Commands
docker network inspect <network>    # Inspect a network

# Container Stats and Metrics
docker stats                       # Show container resource usage stats
docker top <container-id>          # Show running processes in a container









VMs: Heavyweight, fully isolated, good for running different OSes on a single machine.
Containers: Lightweight, faster, best for microservices and cloud-native applications.



Docker Engine	The core system managing containerization.
Docker Daemon (dockerd)	The background service that handles containers.
Docker CLI (docker)	The command-line tool to interact with Docker Daemon.



docker file - image - container 

