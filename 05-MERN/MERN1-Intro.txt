

// what care we have to take while build the project 



// create  two repo for the frontend and backend in the same folder 


// both should have the protected routes 

// a  api should be the to  the get current user 

// deside the folder structure of the app

// handle the proper conditions and validation 

// use react-toast to notify the user , what happing in the app




= folder structure frontend

// - src 
       - public 
       - assets 
       - utils 
            - constant.js 
       - store
            - api 
            - slice
            - rootReducer.js
            -store.js 
       - pages 
       - component
       - sckeleton
       - Layout.js 
       - MainRoute.js




// state management 

use the redux 

find the best way to call to api , 


Which One Should You Use?
For simple API calls → fetch or axios
For complex state management → Redux AsyncThunk or RTK Query
For caching & auto-updates → React Query or SWR
For GraphQL APIs → Apollo Client
For real-time data → WebSockets



// use rtk Query to call api for the studytude 












// handle the error user the special module 

// 


// backend folder structure 

       // - src 
       - model
       - view 
       - controller 
       - util 
       - route
       - constant
       - middleware
       - config
       - index.js 

