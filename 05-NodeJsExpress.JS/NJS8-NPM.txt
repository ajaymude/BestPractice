// 1 - check the node and npm version 
// 2 - create the npm package 
// 3 - packange install and uninstall  











// 1 - check the node and npm version 

// npm --v 
// node --v 




// 2 - create the npm package 

npm init 
npm init -y 



// 3 - packange install and uninstall  

npm i pacakgeName 

npm i pacakgeName  -D or --save-dev

npm i -g pacakgeName   // global install

npm uninstall pacakgeName











cluster

const cluster = require("cluster");
const http = require("http");
const os = require("os");

// Get the number of available CPU cores
const numCPUs = os.cpus().length;

if (cluster.isMaster) {
  console.log(`Master process ${process.pid} is running`);

  // Fork workers (one per CPU core)
  for (let i = 0; i < numCPUs; i++) {
    cluster.fork();
  }

  // Listen for worker exits and restart them
  cluster.on("exit", (worker, code, signal) => {
    console.log(`Worker ${worker.process.pid} died. Restarting...`);
    cluster.fork();
  });
} else {
  // Worker processes handle HTTP requests
  http
    .createServer((req, res) => {
      res.writeHead(200);
      res.end(`Hello from worker ${process.pid}\n`);
    })
    .listen(3000);

  console.log(`Worker ${process.pid} started`);
}


console.log(cluster.isMaster);

